{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUA6BeA,EAxBCC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QACvBC,EADmD,EAAnBC,WACVF,EAAQE,SAEhC,OACG,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACK,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACA,cAACI,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CACIC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHd,eAIQR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,KAJP,IAI6DF,EAAQA,oB,QCAnEU,EAbKC,IAASC,cAAc,CACvCC,OAAQ,0CACVC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIMC,Y,iCCyDRC,MA7Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiByB,EAAjB,KA6BA,OA3BAC,qBAAU,WACRlB,EAAGmB,WAAW,YACXC,QAAQ,YAAa,QACrBC,YAAW,SAAAC,GACZN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAID,EAAIC,GAAIpC,QAASmC,EAAIE,iBAEjE,IAGHT,qBAAU,WACRD,EAAaW,OAAO,6BACnB,IAiBD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,IAAI,6GACT,oDACA,0CAAarC,KAEb,sBAAMC,UAAU,YAAhB,SACE,eAACqC,EAAA,EAAD,CAAarC,UAAU,mBAAvB,UAEA,cAACsC,EAAA,EAAD,CAAOtC,UAAU,aAAauC,YAAY,kBAAkBC,MAAOpB,EAAOqB,SAAU,SAAAC,GAAK,OAAIrB,EAASqB,EAAMC,OAAOH,UACnH,cAACI,EAAA,EAAD,CAAY5C,UAAU,kBAAkB6C,UAAWzB,EAAOf,QAAQ,YAAYD,MAAM,UAAU0C,KAAK,SAASC,QAvB9F,SAACL,GAEnBA,EAAMM,iBAENzC,EAAGmB,WAAW,YAAYuB,IAAI,CAC5BpD,QAASuB,EACTrB,SAAUA,EACVmD,UAAW1C,IAASS,UAAUkC,WAAWC,oBAG3C/B,EAAS,KAaL,SACE,cAAC,IAAD,WAKJ,cAAC,IAAD,UAEEC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAIpC,EAAN,EAAMA,QAAN,OACT,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCoC,YCjDXoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74ba93f6.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core';\r\nimport React, { forwardRef } from 'react';\r\nimport './Message.css';\r\n\r\n\r\nconst Message = forwardRef(({message, username}, ref) => {\r\nconst isUser = username === message.username;\r\n\r\n    return (\r\n       <div ref={ref} className={`message ${isUser && 'message__user'}`}>\r\n            <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n            <CardContent>\r\n             <Typography\r\n                 color=\"white\"\r\n                 variant=\"h5\"\r\n                 component=\"h2\"\r\n                 > {!isUser && `${message.username || 'Unknown User'}:`} {message.message}\r\n             </Typography>\r\n            </CardContent>\r\n        </Card>\r\n\r\n       </div>\r\n       \r\n           \r\n            \r\n       \r\n    )\r\n}) \r\n\r\nexport default Message\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBSO_ePiIZlRBx2zCQmSrN3MPVTYzcilcY\",\r\n  authDomain: \"facebook-messenger-clone-e7b35.firebaseapp.com\",\r\n  projectId: \"facebook-messenger-clone-e7b35\",\r\n  storageBucket: \"facebook-messenger-clone-e7b35.appspot.com\",\r\n  messagingSenderId: \"319815410984\",\r\n  appId: \"1:319815410984:web:7fd64f168f1e026d919c1d\",\r\n  measurementId: \"G-6D244D8LC8\"\r\n\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import React, {useState, useEffect } from 'react';\nimport './App.css';\nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from \"firebase\";\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    db.collection('messages')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    });\n  }, [])\n   \n  \n  useEffect(() => {\n    setUsername( prompt('please enter your name'));\n  }, [])\n\n\n  const sendMessage = (event) => {\n    //all logic to send message goes\n    event.preventDefault();\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n   \n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=100&h=100\" />\n      <h1>Facebook Messenger</h1>\n      <h2>Welcome {username}</h2>\n\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n        \n        <Input className=\"app__input\" placeholder=\"Enter a Message\" value={input} onChange={event => setInput(event.target.value)} />\n        <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\" type='submit' onClick={sendMessage}>\n          <SendIcon />\n        </IconButton>\n        </FormControl>  \n      </form>\n\n      <FlipMove>\n      {\n        messages.map(({id, message}) => (\n            <Message key={id} username={username} message={message} /> \n        ))\n      }\n      </FlipMove>\n\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}